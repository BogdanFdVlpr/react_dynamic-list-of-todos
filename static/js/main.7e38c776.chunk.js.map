{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","setActiveTodo","activeTodo","setUserInfo","loadUserTodo","a","userId","className","map","id","completed","title","classNames","type","onClick","handleClick","TodoFilter","onValueOption","onSetInputValue","inputValue","onChange","event","target","value","placeholder","length","style","pointerEvents","Loader","TodoModal","userInfo","name","email","undefined","href","App","useState","setTodos","valueOption","setValueOption","setInputValue","loadData","filterList","filter","todo","includes","toLowerCase","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e38c776.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number | undefined) => get<User>(`/users/${userId}`);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todos: Todo[],\n  setActiveTodo: (todo: Todo) => void,\n  activeTodo?: Todo,\n  setUserInfo: (value: User) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setActiveTodo,\n  activeTodo,\n  setUserInfo,\n}) => {\n  const loadUserTodo = async () => {\n    setUserInfo(await getUser(activeTodo?.userId));\n  };\n\n  if (activeTodo) {\n    loadUserTodo();\n  }\n\n  const handleClick = (\n    id: number,\n    userId: number,\n    title: string,\n    completed: boolean,\n  ) => {\n    setActiveTodo({\n      id, userId, title, completed,\n    });\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(({\n          id,\n          completed,\n          title,\n          userId,\n        }) => (\n          <>\n            <tr data-cy=\"todo\" className=\"has-background-info-light\">\n              <td\n                className=\"is-vcentered\"\n                key={id}\n              >\n                {id}\n              </td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames('has-text-success',\n                    { 'has-text-danger': !completed })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    handleClick(id, userId, title, completed);\n                  }}\n                >\n                  {activeTodo && id === activeTodo?.id ? (\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  ) : (\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  )}\n\n                </button>\n              </td>\n            </tr>\n          </>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  onValueOption: (value: string) => void,\n  onSetInputValue: (value: string) => void,\n  inputValue: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onValueOption,\n  onSetInputValue,\n  inputValue,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => onValueOption(event.target.value)}\n        >\n          <option\n            value=\"all\"\n          >\n            All\n          </option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={inputValue}\n        onChange={(event) => onSetInputValue(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {inputValue.length > 0 && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onSetInputValue('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  activeTodo?: Todo,\n  setActiveTodo: (value: undefined) => void,\n  userInfo?: User,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  activeTodo,\n  setActiveTodo,\n  userInfo,\n}) => {\n  const { id, title, completed } = { ...activeTodo };\n  const { name, email } = { ...userInfo };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!userInfo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setActiveTodo(undefined);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            {completed ? (\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className=\"has-text-success\">Done</strong>\n\n                {' by '}\n\n                <a href={`mailto:${email}`}>\n                  {name}\n                </a>\n              </p>\n            ) : (\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className=\"has-text-danger\">Planned</strong>\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {name}\n                </a>\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [valueOption, setValueOption] = useState('all');\n  const [inputValue, setInputValue] = useState('');\n  const [activeTodo, setActiveTodo] = useState<Todo | undefined>();\n  const [userInfo, setUserInfo] = useState<User>();\n\n  const loadData = async () => {\n    setTodos(await getTodos());\n  };\n\n  const filterList = todos.filter(todo => {\n    switch (valueOption) {\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return todo;\n    }\n  }).filter(todo => todo.title.includes(inputValue.toLowerCase()));\n\n  useEffect(() => {\n    loadData();\n  }, [valueOption]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onValueOption={setValueOption}\n                onSetInputValue={setInputValue}\n                inputValue={inputValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? <Loader />\n                : (\n                  <TodoList\n                    todos={filterList}\n                    setActiveTodo={setActiveTodo}\n                    activeTodo={activeTodo}\n                    setUserInfo={setUserInfo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {activeTodo?.id && (\n        <TodoModal\n          activeTodo={activeTodo}\n          setActiveTodo={setActiveTodo}\n          userInfo={userInfo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}