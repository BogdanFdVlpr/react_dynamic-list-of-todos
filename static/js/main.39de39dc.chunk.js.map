{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todoId","setTodoId","setUserId","setClickedButtonUserInfo","clickedButtonUserInfo","className","map","id","completed","title","userId","classNames","type","onClick","handleClick","TodoFilter","onValueOption","onSetInputValue","onInputValue","onChange","event","target","value","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","TodoModal","selectTodoId","useState","userInfo","setUserInfo","findTodo","find","user","useEffect","loadUserTodo","a","undefined","href","email","name","App","setTodos","valueOption","setValueOption","inputValue","setInputValue","loadData","filterList","filter","todo","includes","toLowerCase","todoID","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39de39dc.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  todoId: number,\n  setTodoId: (value: number) => void,\n  setUserId: (value: number) => void,\n  setClickedButtonUserInfo: (value: boolean) => void,\n  clickedButtonUserInfo: boolean,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  todoId,\n  setTodoId,\n  setUserId,\n  setClickedButtonUserInfo,\n  clickedButtonUserInfo,\n\n}) => {\n  const handleClick = (id: number, userId: number) => {\n    setTodoId(id);\n    setUserId(userId);\n    setClickedButtonUserInfo(true);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(({\n          id,\n          completed,\n          title,\n          userId,\n        }) => (\n          <>\n            <tr data-cy=\"todo\" className=\"has-background-info-light\">\n              <td\n                className=\"is-vcentered\"\n                key={id}\n              >\n                {id}\n              </td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames('has-text-success',\n                    { 'has-text-danger': !completed })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    handleClick(id, userId);\n                  }}\n                >\n                  {clickedButtonUserInfo && id === todoId ? (\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  ) : (\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  )}\n\n                </button>\n              </td>\n            </tr>\n          </>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  onValueOption: (value: string) => void,\n  onSetInputValue: (value: string) => void,\n  onInputValue: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onValueOption,\n  onSetInputValue,\n  onInputValue,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => onValueOption(event.target.value)}\n        >\n          <option\n            value=\"all\"\n          >\n            All\n          </option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={onInputValue}\n        onChange={(event) => onSetInputValue(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {onInputValue.length > 0 && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onSetInputValue('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  todoId: number,\n  userId: number\n  selectTodoId: (newValue: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todos,\n  todoId,\n  userId,\n  selectTodoId,\n}) => {\n  const [userInfo, setUserInfo] = useState<User>();\n  const findTodo = todos.find(user => user.id === todoId);\n  // const { title, completed } = findTodo;\n\n  useEffect(() => {\n    const loadUserTodo = async () => {\n      setUserInfo(await getUser(userId));\n    };\n\n    loadUserTodo();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {userInfo === undefined ? (\n        <Loader />\n      ) : (\n\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todoId}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectTodoId(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {findTodo?.title}\n            </p>\n\n            {findTodo?.completed ? (\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className=\"has-text-success\">Done</strong>\n\n                {' by '}\n\n                <a href={`mailto:${userInfo.email}`}>\n                  {userInfo.name}\n                </a>\n              </p>\n            ) : (\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className=\"has-text-danger\">Planned</strong>\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {userInfo.name}\n                </a>\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [userId, setUserId] = useState(0);\n  const [valueOption, setValueOption] = useState('all');\n  const [inputValue, setInputValue] = useState('');\n  const [clickedButtonUserInfo, setClickedButtonUserInfo] = useState(false);\n\n  const loadData = async () => {\n    setTodos(await getTodos());\n  };\n\n  const filterList = todos.filter(todo => {\n    switch (valueOption) {\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return todo;\n    }\n  }).filter(todo => todo.title.includes(inputValue.toLowerCase()));\n\n  useEffect(() => {\n    loadData();\n  }, [valueOption]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onValueOption={setValueOption}\n                onSetInputValue={setInputValue}\n                onInputValue={inputValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? <Loader />\n                : (\n                  <TodoList\n                    todos={filterList}\n                    todoId={todoId}\n                    setTodoId={setTodoId}\n                    setUserId={setUserId}\n                    setClickedButtonUserInfo={setClickedButtonUserInfo}\n                    clickedButtonUserInfo={clickedButtonUserInfo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoId !== 0 && (\n        <TodoModal\n          todos={todos}\n          todoId={todoId}\n          userId={userId}\n          selectTodoId={(todoID) => setTodoId(todoID)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}